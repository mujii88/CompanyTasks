#!/bin/bash

echo "üöÄ FREE DEPLOYMENT SETUP FOR TASK MANAGEMENT APP"
echo "================================================"
echo ""

# Check if git is installed
if ! command -v git &> /dev/null; then
    echo "‚ùå Git is not installed. Please install git first."
    exit 1
fi

# Check if we're in a git repository
if [ ! -d ".git" ]; then
    echo "üìÅ Initializing git repository..."
    git init
    git add .
    git commit -m "Initial commit - Task Management Application"
    echo "‚úÖ Git repository initialized"
    echo ""
fi

echo "üìã DEPLOYMENT OPTIONS:"
echo "1. Render.com (Recommended - Most generous free tier)"
echo "2. Railway.app (Good alternative)"
echo "3. Vercel + MongoDB Atlas (Separate frontend/backend)"
echo ""

read -p "Choose deployment option (1-3): " choice

case $choice in
    1)
        echo ""
        echo "üéØ RENDER.COM DEPLOYMENT"
        echo "========================"
        echo ""
        echo "‚úÖ Your app is ready for Render.com deployment!"
        echo ""
        echo "üìã Next Steps:"
        echo "1. Push your code to GitHub:"
        echo "   git remote add origin https://github.com/YOUR_USERNAME/YOUR_REPO.git"
        echo "   git push -u origin main"
        echo ""
        echo "2. Go to https://render.com and sign up"
        echo "3. Click 'New +' ‚Üí 'Blueprint'"
        echo "4. Connect your GitHub repository"
        echo "5. Render will auto-detect render.yaml and deploy everything"
        echo ""
        echo "üéâ You'll get:"
        echo "   ‚Ä¢ Backend API: https://your-app-name.onrender.com"
        echo "   ‚Ä¢ Frontend: https://your-frontend-name.onrender.com"
        echo "   ‚Ä¢ Database: Free PostgreSQL (1GB)"
        echo "   ‚Ä¢ SSL Certificate: Automatic HTTPS"
        echo ""
        ;;
    2)
        echo ""
        echo "üåê RAILWAY.APP DEPLOYMENT"
        echo "========================="
        echo ""
        echo "‚úÖ Your app is ready for Railway deployment!"
        echo ""
        echo "üìã Next Steps:"
        echo "1. Push your code to GitHub:"
        echo "   git remote add origin https://github.com/YOUR_USERNAME/YOUR_REPO.git"
        echo "   git push -u origin main"
        echo ""
        echo "2. Go to https://railway.app and sign up with GitHub"
        echo "3. Click 'New Project' ‚Üí 'Deploy from GitHub repo'"
        echo "4. Select your repository"
        echo "5. Add PostgreSQL database: 'New' ‚Üí 'Database' ‚Üí 'PostgreSQL'"
        echo ""
        echo "üéâ You'll get:"
        echo "   ‚Ä¢ Backend API: https://your-app-name.railway.app"
        echo "   ‚Ä¢ Database: Free PostgreSQL (included in $5 credit)"
        echo "   ‚Ä¢ Automatic deployments"
        echo ""
        ;;
    3)
        echo ""
        echo "üîß VERCEL + MONGODB ATLAS DEPLOYMENT"
        echo "===================================="
        echo ""
        echo "‚úÖ Your app is ready for Vercel + MongoDB Atlas deployment!"
        echo ""
        echo "üìã Next Steps:"
        echo "1. Push your code to GitHub:"
        echo "   git remote add origin https://github.com/YOUR_USERNAME/YOUR_REPO.git"
        echo "   git push -u origin main"
        echo ""
        echo "2. Deploy Frontend on Vercel:"
        echo "   ‚Ä¢ Go to https://vercel.com"
        echo "   ‚Ä¢ Import your GitHub repository"
        echo "   ‚Ä¢ Set build command: cd client && npm install && npm run build"
        echo "   ‚Ä¢ Set output directory: client/build"
        echo ""
        echo "3. Deploy Backend on Railway/Render (see options 1 or 2)"
        echo ""
        echo "4. Set up MongoDB Atlas:"
        echo "   ‚Ä¢ Go to https://mongodb.com/atlas"
        echo "   ‚Ä¢ Create free account and cluster (512MB)"
        echo "   ‚Ä¢ Get connection string and add to backend env vars"
        echo ""
        echo "üéâ You'll get:"
        echo "   ‚Ä¢ Frontend: https://your-app.vercel.app"
        echo "   ‚Ä¢ Backend: https://your-backend-url.com"
        echo "   ‚Ä¢ Database: Free MongoDB Atlas (512MB)"
        echo ""
        ;;
    *)
        echo "‚ùå Invalid choice. Please run the script again."
        exit 1
        ;;
esac

echo ""
echo "üîß PREPARATION CHECKLIST:"
echo "========================="
echo ""

# Check if render.yaml exists
if [ -f "render.yaml" ]; then
    echo "‚úÖ render.yaml found (for Render.com deployment)"
else
    echo "‚ùå render.yaml not found"
fi

# Check if package.json exists
if [ -f "package.json" ]; then
    echo "‚úÖ Root package.json found"
else
    echo "‚ùå Root package.json not found"
fi

# Check if server/package.json exists
if [ -f "server/package.json" ]; then
    echo "‚úÖ Server package.json found"
else
    echo "‚ùå Server package.json not found"
fi

# Check if client/package.json exists
if [ -f "client/package.json" ]; then
    echo "‚úÖ Client package.json found"
else
    echo "‚ùå Client package.json not found"
fi

echo ""
echo "üìö DOCUMENTATION:"
echo "================="
echo "‚Ä¢ Free Deployment Guide: FREE_DEPLOYMENT.md"
echo "‚Ä¢ Main README: README.md"
echo "‚Ä¢ Deployment Guide: DEPLOYMENT.md"
echo ""

echo "üéØ READY TO DEPLOY!"
echo "==================="
echo "Your Task Management Application is configured for free deployment."
echo "Follow the steps above to get your app live on the internet!"
echo ""
echo "Need help? Check the documentation files listed above."
